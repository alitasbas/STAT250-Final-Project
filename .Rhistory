theme_minimal()
# There are some genres which are very rare. Get rid of them
per_year_movie_counts <- genre_counts %>% group_by(genre) %>%
summarize(mean_count_per_year = mean(count, na.rm = T)) %>%
arrange(desc(mean_count_per_year)) # Take the genres that have an average of more than 5
genres_of_interest <- per_year_movie_counts %>%
filter(mean_count_per_year > 5) %>%
pull(genre)
# Visualization for these genres
# Line Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, color = genre)) +
geom_line(linewidth = 1.2) +
labs(title = "Proportion of Movie Genres Over Time")
theme_light()
# Stacked Area Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, fill = genre)) +
geom_area(linewidth = 1.6) +
labs("Proportion of Movie Genres Over Time") +
scale_fill_brewer(palette = "Set1") +
theme_light()
# Faceted Area Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, fill = genre)) +
geom_area(linewidth = 1.6) +
theme_light() +
facet_wrap(~genre)
# It seems interesting...
# 1.2- Are the genre distributions different across regions?
# create a region column to group countries to based on regions
eu_countries <- c("Austria", "Belgium", "Bulgaria", "Czech Republic", "Denmark", "Finland", "France", "Georgia", "Greece", "Germany",
"Hungary", "Iceland", "Ireland", "Italy", "Malta", "Netherlands", "Norway", "Poland", "Portugal",
"Republic of Macedonia", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "Switzerland", "Turkey",
"United Kingdom", "West Germany", "Yugoslavia")
others <- c("Afghanistan", "Australia", "Bahamas", "Cambodia", "Cameroon", "Canada", "Chile", "China", "Colombia",
"Dominican Republic", "Egypt", "Hong Kong", "India", "Indonesia", "Iran", "Israel", "Japan", "Kenya")
kg <- kg[kg$country != "", ]
kg <- kg %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "United States" ~ "USA",
T ~ "Others"
)
)
table(kg$region)
# To construct a side-by-side bar chart, extract the distributions
# Filter only Action, Drama, Comedy, Horror, Animation
acdh_genres <- c("Action", "Drama", "Comedy", "Horror", "Animation")
usa_grp <- kg %>%
filter(genre %in% acdh_genres & region == "USA") %>%
group_by(region, genre) %>%
summarize(prop = n() / table(kg$region)[3],
count = n())
eu_grp <- kg %>%
filter(genre %in% acdh_genres & region == "Europe") %>%
group_by(region, genre) %>%
summarize(prop = n() / table(kg$region)[1],
count = n())
others_grp <- kg %>%
filter(genre %in% acdh_genres & region == "Others") %>%
group_by(region, genre) %>%
summarize(prop = n() / table(kg$region)[2],
count = n())
props_grp <- rbind(usa_grp, eu_grp, others_grp)
props_grp %>%
ggplot(aes(x = region, y = prop, fill = genre)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Proportion of Movie Genres by Region",
x = "Region",
y = "Proportion") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
genre_region_props
# Conduct a chisquare test for this contingency table
# Take the first genre
# kg <- kg %>%
#   mutate(main_genre = strsplit(genres, "\\|"))
# unique(kg$genres)
# 2- Genre profit over years KG
summary(kg[, c("budget", "gross")])
nrow(kg[kg$budget==0, ])
nrow(kg[kg$gross==0, ])
# As movies can't be produced for free, remove all observations with budget=0.
# Additionally, some budget entries are in millions. Take budget greater than 10000.
kg %<>%
filter(budget > 10000)
# There are some flops and wrong values for revenues. Get rid of them, too.
kg %<>%
filter(gross > 10000)
kg %<>%
mutate(profit = (gross - budget) / budget * 100)
# There are some outliers. We decided to increase outlier tolerance as they are true
# but extreme values. Remove the 3 highest profits.
summary(kg$profit)
kg %<>%
filter(profit < sort(kg$profit, decreasing = T)[3])
genre_profits <- kg %>%
group_by(genre) %>%
summarize(avg_profit = mean(profit, na.rm =T)) %>%
arrange(desc(avg_profit)) # Take top four and plot on a time series
genre_profits
# Family seems unusually high
kg %>%
filter(genre=="Family") %>%
arrange(profit)
# Our sample size is extremely small with an extreme observation
# Also, we did not consider thriller because of its small sample size.
# These are the highest viable profiting genres on average
top_genre_list <- c("Horror", "Drama", "Comedy", "Animation")
# Construct a time-series plot
profit_df <- kg %>%
filter(genre %in% top_genre_list) %>%
group_by(year, genre) %>%
summarize(avg_profit_perc = mean(profit, na.rm = T))
profit_time_series <- ggplot(profit_df, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line() +
geom_point()
profit_time_series # Comment on our findings
# The horror genre seems extremely profitable
# To observe the relationship among the others better, plot without horror
profit_time_series_no_horror <- profit_df %>%
filter(genre != "Horror") %>%
ggplot(aes(x = year, y = avg_profit_perc, color = genre)) +
geom_line() +
geom_point() +
labs(title = "Average Profit Percentage Over Time by Genre (Excluding Horror)",
x = "Year",
y = "Average Profit Percentage") +
scale_color_brewer(palette = "Set1") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
profit_time_series_no_horror # Comment on our findings
#####################################################################
# 3- Compare most successful directors
sum(is.na(kg))
## colnames(cinema)
kg %>%
filter(genre == "Drama") %>%
nrow()
## Extract most profitable 15 directors for action genre.
action_directors <- kg %>%
filter(genre=="Action") %>%
group_by(director) %>%
summarise(total_profit =sum(profit,na.rm = TRUE)) %>%
arrange(desc(total_profit)) %>%
slice_head(n=15)
## Extract most profitable 15 directors for drama genre.
drama_directors <- kg %>%
filter(genre == "Drama") %>%
group_by(director) %>%
summarise(total_profit = sum(profit, na.rm = TRUE)) %>%
arrange(desc(total_profit)) %>%
slice_head(n = 15)
## Combine most profitable directors and their profits in drama genre.
## There are giants like Clint Eastwood, Steven Spielberg, James Cameron.
top_drama_directors <- drama_directors$director
drama_profits <- kg %>%
filter(director %in% top_drama_directors & genre == "Drama") %>%
arrange(desc(profit)) %>%
select(director, profit)
drama_profits
## Combine most profitable directors and their profits in action genre.
## There are giants like J.J Abrams, Michael Bay and James Cameron.
top_action_directors <- action_directors$director
action_profits <- kg %>%
filter(director %in% top_action_directors & genre == "Action") %>%
arrange(desc(profit)) %>%
select(director, profit)
action_profits
# Combine the profits data for the t-test
combined_profits <- rbind(
data.frame(director = drama_profits$director, profit = drama_profits$profit, genre = "Drama"),
data.frame(director = action_profits$director, profit = action_profits$profit, genre = "Action")
)
# Print combined profits data for verification
print(combined_profits)
# Separate the profits by genre
drama_profit_values <- combined_profits %>%
filter(genre == "Drama") %>%
pull(profit)
action_profit_values <- combined_profits %>%
filter(genre == "Action") %>%
pull(profit)
drama_profit_values
action_profit_values
t_test_result <- t.test(drama_profit_values, action_profit_values)
t_test_result
## p - value is 0.004181
## based on a 95% confidence interval, since p-value < 0.05, there is a significant difference between
## the mean profits of the most successful 15 directors in the Action and Drama genres.
########################################################################
# Let's analyze the top 10 most successful movies for the past 40 years
top10blockbusters <- read.csv("blockbuster-top_ten_movies_per_year_DFE.csv")
# Visualization for these genres
# Line Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, color = genre)) +
geom_line(linewidth = 1.6) +
theme_light()
# Visualization for these genres
# Line Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, color = genre)) +
geom_line(linewidth = 1.3) +
theme_light()
# Visualization for these genres
# Line Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, color = genre)) +
geom_line(linewidth = 1.2) +
theme_light()
# Visualization for these genres
# Line Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, color = genre)) +
geom_line(linewidth = 1.2) +
labs(title = "Proportion of Movie Genres Over Time") +
scale_fill_brewer(palette = "Set1") +
theme_light()
# Visualization for these genres
# Line Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, color = genre)) +
geom_line(linewidth = 1.2) +
labs(title = "Proportion of Movie Genres Over Time") +
scale_fill_brewer(palette = "Set1") +
theme_light()
# Visualization for these genres
# Line Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, color = genre)) +
geom_line(linewidth = 1.2) +
labs(title = "Proportion of Movie Genres Over Time") +
scale_fill_brewer(palette = "Set2") +
theme_light()
# Stacked Area Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, fill = genre)) +
geom_area(linewidth = 1.6) +
labs("Proportion of Movie Genres Over Time") +
scale_fill_brewer(palette = "Set1") +
theme_light()
# Faceted Area Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, fill = genre)) +
geom_area(linewidth = 1.6) +
theme_light() +
facet_wrap(~genre)
# Faceted Area Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, fill = genre)) +
geom_area(linewidth = 51.6) +
theme_light() +
facet_wrap(~genre)
# Faceted Area Plot
genre_proportions %>%
filter(genre %in% genres_of_interest) %>%
ggplot(aes(x=year, y = proportion, fill = genre)) +
geom_area() +
theme_light() +
facet_wrap(~genre)
genre_region_props <- ggplot(props_grp, aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity", position="dodge")
genre_region_props
genre_region_props <- ggplot(props_grp, aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity", position="dodge") %>%
labs(title = "Proportion of Movie Genres by Region",
x = "Region",
y = "Proportion") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
genre_region_props
props_grp %>% ggplot(aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity", position="dodge")
props_grp %>% ggplot(aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity", position="dodge") %>%
labs(title = "Proportion of Movie Genres by Region",
x = "Region",
y = "Proportion")
props_grp %>% ggplot(aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity", position="dodge") +
labs(title = "Proportion of Movie Genres by Region",
x = "Region",
y = "Proportion") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
profit_time_series <- ggplot(profit_df, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line() +
geom_point()
profit_time_series # Comment on our findings
profit_time_series <- ggplot(profit_df, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line()
profit_time_series # Comment on our findings
profit_time_series <- ggplot(profit_df, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line(linewidth=1.2)
profit_time_series # Comment on our findings
profit_time_series <- ggplot(profit_df, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line(linewidth=1)
profit_time_series # Comment on our findings
profit_time_series_no_horror <- profit_df %>%
filter(genre != "Horror") %>%
ggplot(aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line(linewdith = 1) +
geom_point()
profit_time_series <- ggplot(profit_df, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line(linewidth=1)
profit_time_series_no_horror <- profit_df %>%
filter(genre != "Horror") %>%
ggplot(aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line(linewidth = 1) +
geom_point() +
labs(title = "Average Profit Percentage Over Time by Genre (Excluding Horror)",
x = "Year",
y = "Average Profit Percentage") +
scale_color_brewer(palette = "Set1") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
profit_time_series_no_horror # Comment on our findings
profit_time_series <- ggplot(profit_df, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line(linewidth=1) +
scale_color_brewer(palette = "Set1")
profit_time_series # Comment on our findings
ggplot(dist, aes(x = Year, y = Gross.Revenue, color = X.Distributor)) +
geom_line(aes(group = X.Distributor)) +
geom_point() +
labs(title = "Total Gross Revenue Over the Years by Distributor",
x = "Year",
y = "Total Gross Revenue") +
theme_minimal()
ggplot(dist, aes(x = Year, y = Gross.Revenue, color = X.Distributor)) +
geom_line(aes(group = X.Distributor)) +
geom_point() +
labs(title = "Total Gross Revenue Over the Years by Distributor",
x = "Year",
y = "Total Gross Revenue") +
scale_color_brewer(palette = "Set1") +
theme_minimal()
# Plot number of movies over the years
ggplot(dist, aes(x = Year, y = Films.Distributed, color = X.Distributor)) +
geom_line(aes(group = X.Distributor)) +
geom_point() +
labs(title = "Number of Movies Released Over the Years by Distributor",
x = "Year",
y = "Number of Movies") +
scale_color_brewer(palette = "Set1") +
theme_minimal()
# Plot number of movies over the years
ggplot(dist, aes(x = Year, y = Films.Distributed, color = X.Distributor)) +
geom_line(aes(group = X.Distributor)) +
geom_point() +
labs(title = "Number of Movies Released Over the Years by Distributor",
x = "Year",
y = "Number of Movies") +
theme_minimal()
# Plot average gross revenue per film over the years
ggplot(dist, aes(x = Year, y = Revenue.per.Film, color = X.Distributor)) +
geom_line(aes(group = X.Distributor)) +
geom_point() +
labs(title = "Average Gross Revenue Per Film Over the Years by Distributor",
x = "Year",
y = "Average Gross Revenue Per Film") +
theme_minimal()
ggplot(dist, aes(x = Year, y = Gross.Revenue, color = X.Distributor)) +
geom_line(aes(group = X.Distributor)) +
geom_point() +
labs(title = "Total Gross Revenue Over the Years by Distributor",
x = "Year",
y = "Total Gross Revenue") +
theme_minimal()
# Plot average gross revenue per film over the years
ggplot(dist, aes(x = Year, y = Revenue.per.Film, color = X.Distributor)) +
geom_line(aes(group = X.Distributor)) +
geom_point() +
labs(title = "Average Gross Revenue Per Film Over the Years by Distributor",
x = "Year",
y = "Average Gross Revenue Per Film") +
theme_minimal()
ggplot(dist, aes(x = Year, y = Gross.Revenue, color = X.Distributor)) +
geom_line(aes(group = X.Distributor)) +
geom_point() +
labs(title = "Total Gross Revenue Over the Years by Distributor",
x = "Year",
y = "Total Gross Revenue") +
theme_minimal()
ggplot(dist, aes(x = Year, y = Gross.Revenue, color = X.Distributor)) +
geom_line(aes(group = X.Distributor)) +
geom_point() +
labs(title = "Total Gross Revenue Over the Years by Distributor",
x = "Year",
y = "Total Gross Revenue") +
theme_minimal()
# group every 5 years after 1995 togethter
walt_disney_movies %<>%
filter(year >= 1995) %>%
mutate(year_cat = cut(year, breaks=c(1994, 2000, 2005, 2010, 2015, 2020),
labels = c("1995-2000", "2001-2005",
"2006-2010", "2011-2015", "2016-2020")))
all_movies_year_cat_mean <- kg %>%
filter(year >= 1995) %>%
mutate(year_cat = cut(year, breaks=c(1994, 2000, 2005, 2010, 2015, 2021),
labels = c("1995-2000", "2001-2005",
"2006-2010", "2011-2015", "2016-2020"))) %>%
group_by(year_cat) %>%
summarize(mean_gross = mean(gross, na.rm = T), .groups = "drop") %>%
mutate(company = "All")
walt_disney_year_cat_mean <- walt_disney_movies %>%
group_by(year_cat) %>%
summarize(mean_gross = mean(gross, na.rm = T), .groups = "drop") %>%
mutate(company = "Walt Disney")
grouped <- rbind(walt_disney_year_cat_mean, all_movies_year_cat_mean)
ggplot(grouped, aes(x=year_cat, y=mean_gross, fill=company)) +
geom_col(position = "dodge")
ggplot(grouped, aes(x=year_cat, y=mean_gross, fill=company)) +
geom_col(position = "dodge") +
scale_color_brewer(palette = "Set1")
# Plot the pie chart
ggplot(top_50_gross, aes(x = table(company), label = company)) +   # Set x to "" to create a circular chart
geom_bar(stat = "identity", width = 1, color = "skyblue") +  # Adjust color as desired
coord_polar(theta = "n") +  # Set theta to "n" for starting angle at the top
labs(title = "Pie Chart Example",
fill = "Category",  # Fill label not applicable for pie charts, remove for clarity
caption = "Values are proportions") +  # Add caption if needed
theme_minimal() +  # Optional: Use a cleaner theme
scale_y_continuous(labels = scales::percent)  # Format y-axis labels as percentages
# Plot the pie chart
ggplot(top_50_gross, aes(x = table(company), label = company)) +   # Set x to "" to create a circular chart
geom_bar(stat = "identity", width = 1, color = "skyblue") +  # Adjust color as desired
coord_polar(theta = "x") +  # Set theta to "n" for starting angle at the top
labs(title = "Pie Chart Example",
fill = "Category",  # Fill label not applicable for pie charts, remove for clarity
caption = "Values are proportions") +  # Add caption if needed
theme_minimal() +  # Optional: Use a cleaner theme
scale_y_continuous(labels = scales::percent)  # Format y-axis labels as percentages
ggplot(grouped, aes(x=year_cat, y=mean_gross, fill=company)) +
geom_col(position = "dodge") +
# After the agreement with Lucas Studios in 2009  Warner Bros dominated the industry
top_50_gross <- kg %>%
filter(year >= 2009) %>%
arrange(desc(gross)) %>%
slice_head(n=50)
ggplot(grouped, aes(x=year_cat, y=mean_gross, fill=company)) +
geom_col(position = "dodge") +
# After the agreement with Lucas Studios in 2009  Warner Bros dominated the industry
top_50_gross <- kg %>%
filter(year >= 2009) %>%
arrange(desc(gross)) %>%
slice_head(n=50)
grouped <- rbind(walt_disney_year_cat_mean, all_movies_year_cat_mean)
ggplot(grouped, aes(x=year_cat, y=mean_gross, fill=company)) +
geom_col(position = "dodge") +
# After the agreement with Lucas Studios in 2009  Warner Bros dominated the industry
top_50_gross <- kg %>%
filter(year >= 2009) %>%
arrange(desc(gross)) %>%
slice_head(n=50)
ggplot(grouped, aes(x=year_cat, y=mean_gross, fill=company)) +
geom_col(position = "dodge")
table(top_50_gross$company)
# group every 5 years after 1995 togethter
walt_disney_movies %<>%
mutate(gross = gross / 1000000) %>%
filter(year >= 1995) %>%
mutate(year_cat = cut(year, breaks=c(1994, 2000, 2005, 2010, 2015, 2020),
labels = c("1995-2000", "2001-2005",
"2006-2010", "2011-2015", "2016-2020")))
all_movies_year_cat_mean <- kg %>%
mutate(gross = gross / 1000000) %>%
filter(year >= 1995) %>%
mutate(year_cat = cut(year, breaks=c(1994, 2000, 2005, 2010, 2015, 2021),
labels = c("1995-2000", "2001-2005",
"2006-2010", "2011-2015", "2016-2020"))) %>%
group_by(year_cat) %>%
summarize(mean_gross = mean(gross, na.rm = T), .groups = "drop") %>%
mutate(company = "All")
walt_disney_year_cat_mean <- walt_disney_movies %>%
group_by(year_cat) %>%
summarize(mean_gross = mean(gross, na.rm = T), .groups = "drop") %>%
mutate(company = "Walt Disney")
grouped <- rbind(walt_disney_year_cat_mean, all_movies_year_cat_mean)
ggplot(grouped, aes(x=year_cat, y=mean_gross, fill=company)) +
geom_col(position = "dodge")
ggplot(grouped, aes(x=year_cat, y=mean_gross, fill=company)) +
geom_col(position = "dodge") +
labs(title = "",
x = "Year",
y = "Mean Gross (in millions)")
