source("D:/ODTU/Sem 4/STAT250/STAT250-Final-Project/EDA.R", echo=TRUE)
# Start the EDA process
colnames(tmdb_movies)
tmdb_movies[, "production_countries"]
head(tmdb_movies[, "production_countries"])
head(tmdb_movies)
head(tmdb_movies[, "production_countries"])
movies_data <- read.csv("Databases/movies_data.csv")
getwd()
movies_data <- read.csv("Databases/movie_data.csv")
df <- movies_data
is.na(df)
is.na(df$country)
sum(is.na(df$country))
table(df$country)
sum(is.null(df$country))
sum(df$country == "")
sort(unique(df$country), decreasing = F)
movies_data %>% mutate(
region = case_when(
country %in% eu_countries ~ Europe,
country == "USA" ~ USA,
T ~ Others
)
)
# create a column in dataset to group countries to continents
eu_countries <- c("Belgium", "Bulgaria", "Czech Republic", "Denmark", "Finland", "France", "Georgia", "Greece", "Germany",
"Hungary", "Iceland", "Ireland", "Italy", "Netherlands", "Norway", "Poland", "Romania", "Slovakia",
"Slovenia", "Spain", "Sweden", "Switzerland", "Turkey", "UK", "West Germany", "", "")
d <- movies_data %>% mutate(
region = case_when(
country %in% eu_countries ~ Europe,
country == "USA" ~ USA,
T ~ Others
)
)
d <- movies_data %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "USA" ~ "USA",
T ~ "Others"
)
)
d$country
d$region
table(d$region)
dirs <- read.csv("Databases/movies_1970_2018.csv")
head(dirs)
colnames(dirs)
dir <- dirs %>%
mutate(profit_prop = (gross - budget) / budget * 100)
str(dirs)
as.numeric(dirs$gross)
unique(d$genres)
str = "Comedy|Crime|Drama|Horror|Thriller"
strsplit(str, "|")
# Take the first genre
d <- d %>%
mutate(genre1 = strsplit(genre, "\\|")[[1]])
strsplit(str, "\\|")
strsplit(str, "\\|")[1]
strsplit(str, "\\|")[[1]]
strsplit(str, "\\|")[[1]][1]
# Take the first genre
d <- d %>%
mutate(genre1 = strsplit(genre, "\\|")[[1]][1])
colnames(d)
# Take the first genre
d <- d %>%
mutate(main_genre = strsplit(genres, "\\|")[[1]][1])
unique(d$genres)
unique(d$main_genre)
table(d$main_genre)
source("D:/ODTU/Sem 4/STAT250/STAT250-Final-Project/EDA.R", echo=TRUE)
others <- c("Afghanistan", "Australia", "Bahamas", "Cambodia", "Cameroon", "Canada", "Chile", "China", "Colombia",
"Dominican Republic", "Egypt", "Hong Kong", "India", "Indonesia", "Iran", "Israel", "Japan", "Kenya", "",
"", "", "", "", "", "", "", "", "", "")
d <- movies_data %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "USA" ~ "USA",
T ~ "Others"
)
)
table(d$region)
# Take the first genre
d <- d %>%
mutate(main_genre = strsplit(genres, "\\|")[[1]][1])
unique(d$genres)
unique(d$main_genre)
head(d)
# Take the first genre
d <- d %>%
mutate(main_genre = strsplit(genres, "\\|")[[1]])
# Take the first genre
d <- d %>%
mutate(main_genre = strsplit(genres, "\\|")[1])
table(d$main_genre)
d$main_genre
# Take the first genre
d <- d %>%
mutate(main_genre = strsplit(genres, "\\|")[1][1])
d$main_genre
strsplit(genres, "\\|")
strsplit(str, "\\|")
type(strsplit(genres, "\\|"))
typeof(strsplit(genres, "\\|"))
typeof(strsplit(str, "\\|"))
typeof(strsplit(str, "\\|")[[1]])
typeof(strsplit(str, "\\|")[1])
kg <- read.csv("Databases/Kaggle_movies")
kg <- read.csv("Databases/Kaggle_movies.csv")
head(kg)
table(kg$country)
colnames(kg)
d <- kg %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "USA" ~ "USA",
T ~ "Others"
)
)
table(d$region)
d <- kg %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "United States" ~ "USA",
T ~ "Others"
)
)
table(d$region)
# create a column in dataset to group countries to continents
eu_countries <- c("Belgium", "Bulgaria", "Czech Republic", "Denmark", "Finland", "France", "Georgia", "Greece", "Germany",
"Hungary", "Iceland", "Ireland", "Italy", "Netherlands", "Norway", "Poland", "Romania", "Slovakia",
"Slovenia", "Spain", "Sweden", "Switzerland", "Turkey", "United Kingdom", "West Germany", "", "")
d <- kg %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "United States" ~ "USA",
T ~ "Others"
)
)
table(d$region)
kg <- kg[kg$country != "", ]
d <- kg %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "United States" ~ "USA",
T ~ "Others"
)
)
table(d$region)
# create a column in dataset to group countries to continents
eu_countries <- c("Austria", "Belgium", "Bulgaria", "Czech Republic", "Denmark", "Finland", "France", "Georgia", "Greece", "Germany",
"Hungary", "Iceland", "Ireland", "Italy", "Malta", "Netherlands", "Norway", "Poland", "Portugal",
"Republic of Macedonia", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "Switzerland", "Turkey",
"United Kingdom", "West Germany", "Yugoslavia")
kg <- kg[kg$country != "", ]
d <- kg %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "United States" ~ "USA",
T ~ "Others"
)
)
d$region
table(d$region)
d$genre
unique(d$genre)
# Filter only action, Sci-Fi, Comedy, Horror, Animation
d <- d %>%
filter(genre %in% c("Action", "Sci-Fi", "Comedy", "Horror", "Animation")) %>%
# Take the first genre
# d <- d %>%
#   mutate(main_genre = strsplit(genres, "\\|"))
# unique(d$genres)
##### drama vs science fiction
dir <- dirs %>%
mutate(profit_prop = (gross - budget) / budget * 100)
str(dirs)
str(d)
# Filter only action, Sci-Fi, Comedy, Horror, Animation
d <- d %>%
filter(genre %in% c("Action", "Sci-Fi", "Comedy", "Horror", "Animation")) %>%
# Take the first genre
# d <- d %>%
#   mutate(main_genre = strsplit(genres, "\\|"))
# unique(d$genres)
##### drama vs science fiction
d <- d %>%
mutate(profit_prop = (gross - budget) / budget * 100)
# Filter only action, Sci-Fi, Comedy, Horror, Animation
d <- d %>%
filter(genre %in% c("Action", "Sci-Fi", "Comedy", "Horror", "Animation")) %>%
# Take the first genre
# d <- d %>%
#   mutate(main_genre = strsplit(genres, "\\|"))
# unique(d$genres)
##### drama vs science fiction
dir <- dirs %>%
mutate(profit_prop = (gross - budget) / budget * 100)
# Filter only action, Sci-Fi, Comedy, Horror, Animation
d <- d %>%
filter(genre %in% c("Action", "Sci-Fi", "Comedy", "Horror", "Animation")) %>%
# Take the first genre
# d <- d %>%
#   mutate(main_genre = strsplit(genres, "\\|"))
# unique(d$genres)
##### drama vs science fiction
dir <- dirs %>%
mutate(profit_prop = (gross - budget) / budget * 100)
# Filter only action, Sci-Fi, Comedy, Horror, Animation
d <- d %>%
filter(genre %in% c("Action", "Sci-Fi", "Comedy", "Horror", "Animation"))
table(d$genre)
table(kg$genre)
# Filter only Action, Drama, Comedy, Horror, Animation
d <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation"))
d <- kg %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "United States" ~ "USA",
T ~ "Others"
)
)
table(d$region)
# Filter only Action, Drama, Comedy, Horror, Animation
d <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation"))
table(d$genre)
# Filter only Action, Drama, Comedy, Horror, Animation
grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation")) %>%
group_by(regio, genre) %>%
summarize(prop = count())
# Filter only Action, Drama, Comedy, Horror, Animation
grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation")) %>%
group_by(region, genre) %>%
summarize(prop = count())
# Filter only Action, Drama, Comedy, Horror, Animation
grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation")) %>%
group_by(region, genre) %>%
summarize(prop = n() / nrow(d))
grpd
grp
# Filter only Action, Drama, Comedy, Horror, Animation
usa_grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation") & region == "USA") %>%
group_by(region, genre) %>%
summarize(prop = n() / nrow(d))
eu_grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation") & region == "Europe") %>%
group_by(region, genre) %>%
summarize(prop = n() / nrow(d))
others_grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation") & region == "Others") %>%
group_by(region, genre) %>%
summarize(prop = n() / nrow(d))
usa_grp
grp <- rbind(usa_grp, eu_grp, others_grp)
grp
table(d$region)
table(d$region)[1]
table(d$region)[1] + 5
# Filter only Action, Drama, Comedy, Horror, Animation
usa_grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation") & region == "USA") %>%
group_by(region, genre) %>%
summarize(prop = n() / table(d$region)[3])
eu_grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation") & region == "Europe") %>%
group_by(region, genre) %>%
summarize(prop = n() / table(d$region)[1])
others_grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation") & region == "Others") %>%
group_by(region, genre) %>%
summarize(prop = n() / table(d$region)[2])
grp <- rbind(usa_grp, eu_grp, others_grp)
grp
ggplot(d, aes(x=region, y=)) +
geom_bar(position = "stack")
ggplot(grp, aes(x=region, y=prop, color=genre)) +
geom_bar(position = "stack")
ggplot(grp, aes(x=region, y=prop)) +
geom_bar(position = "stack")
ggplot(grp, aes(x=region, y=prop)) +
geom_bar(position = "stack")
ggplot(grp, aes(x=region, y=prop)) +
geom_col(position = "stack")
ggplot(grp, aes(x=region, y=prop)) +
geom_col()
ggplot(grp, aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity")
ggplot(grp, aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity", position="stack")
ggplot(grp, aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity", position="dodge")
# Filter only Action, Drama, Comedy, Horror, Animation
usa_grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation") & region == "USA") %>%
group_by(region, genre) %>%
summarize(prop = n() / table(d$region)[3],
count = n())
eu_grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation") & region == "Europe") %>%
group_by(region, genre) %>%
summarize(prop = n() / table(d$region)[1],
count = n())
others_grp <- d %>%
filter(genre %in% c("Action", "Drama", "Comedy", "Horror", "Animation") & region == "Others") %>%
group_by(region, genre) %>%
summarize(prop = n() / table(d$region)[2],
count = n())
grp <- rbind(usa_grp, eu_grp, others_grp)
ggplot(grp, aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity", position="dodge")
ggplot(grp, aes(x=region, y=count, fill=genre)) +
geom_bar(stat="identity", position="dodge")
ggplot(grp, aes(x=region, y=prop, fill=genre)) +
geom_bar(stat="identity", position="dodge")
str(d)
d %>%
filter(genre %in% genre_list) %>%
mutate(profit = (gross - budget) / budget * 100)
genre_list
##### drama vs science fiction
genre_list <- c("Comedy", "Action", "Animation", "Horror")
d %>%
filter(genre %in% genre_list) %>%
mutate(profit = (gross - budget) / budget * 100)
d
x <- d %>%
filter(genre %in% genre_list) %>%
mutate(profit = (gross - budget) / budget * 100)
haed(x)
head(x)
sort(x$profit, decreasing = T)[1:10]
##### drama vs science fiction
high_profit_genre_list <- x[x$profit %in% sort(x$profit, decreasing = T)[1:10], "genre"]
high_profit_genre_list
##### drama vs science fiction
high_profit_genre_list <- x[x$profit %in% sort(x$profit, decreasing = T)[1:10], ]
high_profit_genre_list
##### drama vs science fiction
high_profit_genre_list <- x[x$profit %in% sort(x$profit, decreasing = T)[1:100], ]
table(high_profit_genre_list)
##### drama vs science fiction
high_profit_genre_list <- x[x$profit %in% sort(x$profit, decreasing = T)[1:100], "genre"]
table(high_profit_genre_list)
nrow(x)
profit <- x %>%
group_by(genre) %>%
summarize(avg_profit = mean(profit))
profit
profit <- x %>%
group_by(genre) %>%
summarize(avg_profit = mean(profit, na.rm =T))
profit
source("D:/ODTU/Sem 4/STAT250/STAT250-Final-Project/EDA.R", echo=TRUE)
profit
##### genre profit over years
high_profit_genre_list <- kg[kg$profit %in% sort(kg$profit, decreasing = T)[1:100], "genre"]
table(high_profit_genre_list)
kg
table(high_profit_genre_list)
sort(kg$profit, decreasing = T)[1:100]
##### genre profit over years
p <- d %>%
filter(genre %in% genre_list) %>%
mutate(profit = (gross - budget) / budget * 100)
high_profit_genre_list <- p[p$profit %in% sort(p$profit, decreasing = T)[1:100], "genre"]
table(high_profit_genre_list)
profit <- x %>%
group_by(genre) %>%
summarize(avg_profit = mean(profit, na.rm =T))
profit
table(p$genre)
table(kg$genre)
kg <- read.csv("Databases/Kaggle_movies.csv")
kg <- kg[kg$country != "", ]
d <- kg %>% mutate(
region = case_when(
country %in% eu_countries ~ "Europe",
country == "United States" ~ "USA",
T ~ "Others"
)
)
unique(d$genre)
##### genre profit over years
p <- d %>%
filter(genre %in% genre_list) %>%
mutate(profit = (gross - budget) / budget * 100)
##### genre profit over years
p <- d %>%
# filter(genre %in% genre_list) %>%
mutate(profit = (gross - budget) / budget * 100)
table(p$genre)
high_profit_genre_list <- p[p$profit %in% sort(p$profit, decreasing = T)[1:100], "genre"]
table(high_profit_genre_list)
profit <- p %>%
group_by(genre) %>%
summarize(avg_profit = mean(profit, na.rm =T))
profit
source("D:/ODTU/Sem 4/STAT250/STAT250-Final-Project/EDA.R", echo=TRUE)
profit
nrow(p)
mean(kg[kg$genre=="Horror", ], na.rm=T)
mean(kg[kg$genre=="Horror", "profit"], na.rm=T)
mean(p[p$genre=="Horror", "profit"], na.rm=T)
p
table(high_profit_genre_list)
profit
table(high_profit_genre_list)
profit
profit <- p %>%
group_by(genre) %>%
summarize(avg_profit = mean(profit, na.rm =T)) %>%
arrange(avg_profit)
profit
profit <- p %>%
group_by(genre) %>%
summarize(avg_profit = mean(profit, na.rm =T)) %>%
arrange(desc(avg_profit))
profit
# These are the highest grossing genres on average
genre_list <- c("Horror", "Family", "Thriller", "Animation")
profit <- p %>%
filter(genre %in% genre_list) %>%
group_by(year, genre) %>%
summarize(avg_profit = mean(profit, na.rm = T))
profit
p_time_series <- ggplot(p, aes(x=year, y=avg_profit, color=genre)) +
geom_line()
p_time_series
p
p_time_series <- ggplot(profit, aes(x=year, y=avg_profit, color=genre)) +
geom_line()
p_time_series
profit
profit[profit$avg_profit < 3000, ]
z <- profit[profit$avg_profit < 3000, ]
p_time_series <- ggplot(z, aes(x=year, y=avg_profit, color=genre)) +
geom_line()
p_time_series
b <- profit[profit$avg_profit > 3000, ]
b
head(p)
p[p$profit > 5000, ]
p_time_series <- ggplot(z, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line() +
geom_point()
p_time_series
profit <- p %>%
filter(genre %in% genre_list) %>%
group_by(year, genre) %>%
summarize(avg_profit_perc = mean(profit, na.rm = T))
p_time_series <- ggplot(z, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line() +
geom_point()
p_time_series <- ggplot(profit, aes(x=year, y=avg_profit_perc, color=genre)) +
geom_line() +
geom_point()
p_time_series
